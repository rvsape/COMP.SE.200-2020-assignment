{
  "stats": {
    "suites": 21,
    "tests": 39,
    "passes": 39,
    "pending": 0,
    "failures": 0,
    "start": "2020-12-04T08:46:51.940Z",
    "end": "2020-12-04T08:46:52.020Z",
    "duration": 80,
    "testsRegistered": 39,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0c444355-0dd3-418d-ba87-e5a9a16f3929",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "809d9024-affe-4262-bfca-8b1c5d59c3c0",
          "title": "Test case #1",
          "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-1.test.js",
          "file": "\\src\\test\\test-case-1.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "a6313654-afe1-4268-99ea-faac712c0c02",
              "title": "add.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-1.test.js",
              "file": "\\src\\test\\test-case-1.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "adds positive number to positive number",
                  "fullTitle": "Test case #1 add.js adds positive number to positive number",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _add[\"default\"])(3, 6)).to.equal(9);",
                  "err": {},
                  "uuid": "8179e2fe-6fbe-4669-963d-783c5c59c0a0",
                  "parentUUID": "a6313654-afe1-4268-99ea-faac712c0c02",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8179e2fe-6fbe-4669-963d-783c5c59c0a0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3aea0f7d-65e5-46a0-9a30-ec57f80cf1a0",
          "title": "Test case #2",
          "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-2.test.js",
          "file": "\\src\\test\\test-case-2.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "9ed81dcd-aae5-44ba-ad8c-43f24ff0f09d",
              "title": "reduce.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-2.test.js",
              "file": "\\src\\test\\test-case-2.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "reduces the values in array to equal the sum of the values",
                  "fullTitle": "Test case #2 reduce.js reduces the values in array to equal the sum of the values",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _reduce[\"default\"])([1, 2], function (sum, n) {\n  return sum + n;\n}, 0);\nexpect(result).to.equal(3);",
                  "err": {},
                  "uuid": "2d85766a-fd76-4055-81f3-362b76a4c212",
                  "parentUUID": "9ed81dcd-aae5-44ba-ad8c-43f24ff0f09d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "reduces the values of an object into object containing arrays based on object data",
                  "fullTitle": "Test case #2 reduce.js reduces the values of an object into object containing arrays based on object data",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var testData = {\n  'a': 1,\n  'b': 2,\n  'c': 1\n};\nvar result = (0, _reduce[\"default\"])(testData, function (res, value, key) {\n  (res[value] || (res[value] = [])).push(key);\n  return res;\n}, {});\nvar passData = {\n  '1': ['a', 'c'],\n  '2': ['b']\n};\nexpect(result).to.eql(passData);",
                  "err": {},
                  "uuid": "9ea388e6-2b8c-43d3-83b0-4a4265e49d2b",
                  "parentUUID": "9ed81dcd-aae5-44ba-ad8c-43f24ff0f09d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2d85766a-fd76-4055-81f3-362b76a4c212",
                "9ea388e6-2b8c-43d3-83b0-4a4265e49d2b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5365586e-4f5d-4786-8bc8-c354a10d6cdf",
          "title": "Test case #3",
          "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-3.test.js",
          "file": "\\src\\test\\test-case-3.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "1cc27008-3371-4b5b-962a-502687f4ea34",
              "title": "ceil.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-3.test.js",
              "file": "\\src\\test\\test-case-3.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "rounds up the given value to one decimal accuracy",
                  "fullTitle": "Test case #3 ceil.js rounds up the given value to one decimal accuracy",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _ceil[\"default\"])(1.112232323, 1);\nexpect(result).to.equal(1.2);",
                  "err": {},
                  "uuid": "deca9c15-7eec-4107-879a-fb23cad94cae",
                  "parentUUID": "1cc27008-3371-4b5b-962a-502687f4ea34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "rounds up the given value to two decimal accuracy",
                  "fullTitle": "Test case #3 ceil.js rounds up the given value to two decimal accuracy",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var result = (0, _ceil[\"default\"])(3.231234, 2);\nexpect(result).to.equal(3.24);",
                  "err": {},
                  "uuid": "1ad396a3-4b22-4f7d-89d5-5265b287bb42",
                  "parentUUID": "1cc27008-3371-4b5b-962a-502687f4ea34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "deca9c15-7eec-4107-879a-fb23cad94cae",
                "1ad396a3-4b22-4f7d-89d5-5265b287bb42"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d6a07946-9deb-41ef-888b-773ecf4b5c98",
          "title": "Test case #4",
          "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-4.test.js",
          "file": "\\src\\test\\test-case-4.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "da85642a-41ff-440f-a58f-f9a2c149a684",
              "title": "isBuffer.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-4.test.js",
              "file": "\\src\\test\\test-case-4.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return false for empty array",
                  "fullTitle": "Test case #4 isBuffer.js should return false for empty array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var testData = [];\nexpect((0, _isBuffer[\"default\"])(testData)).to.equal(false);",
                  "err": {},
                  "uuid": "cb6669de-d20f-4e9b-9190-c58c6ce411de",
                  "parentUUID": "da85642a-41ff-440f-a58f-f9a2c149a684",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for a non-buffer data",
                  "fullTitle": "Test case #4 isBuffer.js should return false for a non-buffer data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var testData = new Uint8Array(3);\nexpect((0, _isBuffer[\"default\"])(testData)).to.equal(false);",
                  "err": {},
                  "uuid": "01988391-0c81-4dd3-b110-f04d4aeb0858",
                  "parentUUID": "da85642a-41ff-440f-a58f-f9a2c149a684",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for a buffer data",
                  "fullTitle": "Test case #4 isBuffer.js should return true for a buffer data",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var testData = new Buffer.alloc(3);\nexpect((0, _isBuffer[\"default\"])(testData)).to.equal(true);",
                  "err": {},
                  "uuid": "5d48d338-1560-4733-bb9b-9ffaa6fd1476",
                  "parentUUID": "da85642a-41ff-440f-a58f-f9a2c149a684",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cb6669de-d20f-4e9b-9190-c58c6ce411de",
                "01988391-0c81-4dd3-b110-f04d4aeb0858",
                "5d48d338-1560-4733-bb9b-9ffaa6fd1476"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "7fa58736-9ae7-474b-ac09-5239b244369d",
              "title": "isObjectLike.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-4.test.js",
              "file": "\\src\\test\\test-case-4.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return false for non-object like value",
                  "fullTitle": "Test case #4 isObjectLike.js should return false for non-object like value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isObjectLike[\"default\"])(null)).to.equal(false);",
                  "err": {},
                  "uuid": "123d583d-8014-47b3-89ee-005f95cfd68e",
                  "parentUUID": "7fa58736-9ae7-474b-ac09-5239b244369d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for object like value",
                  "fullTitle": "Test case #4 isObjectLike.js should return true for object like value",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isObjectLike[\"default\"])({})).to.equal(true);",
                  "err": {},
                  "uuid": "c107a8c9-735d-4b6c-b24b-29dd624eea2b",
                  "parentUUID": "7fa58736-9ae7-474b-ac09-5239b244369d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "123d583d-8014-47b3-89ee-005f95cfd68e",
                "c107a8c9-735d-4b6c-b24b-29dd624eea2b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "767d83a1-304b-4a09-ba99-2726ff723d34",
              "title": "isArguments.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-4.test.js",
              "file": "\\src\\test\\test-case-4.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for an arguments like object",
                  "fullTitle": "Test case #4 isArguments.js should return true for an arguments like object",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isArguments[\"default\"])(function () {\n  return arguments;\n}())).to.equal(true);",
                  "err": {},
                  "uuid": "870d2bfe-7eb1-4cba-a90b-092caf1da94a",
                  "parentUUID": "767d83a1-304b-4a09-ba99-2726ff723d34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for not an arguments like object",
                  "fullTitle": "Test case #4 isArguments.js should return false for not an arguments like object",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isArguments[\"default\"])([1, 2, 3])).to.equal(false);",
                  "err": {},
                  "uuid": "785a9d0a-e38a-49f2-9b3d-c3cb20ead7d9",
                  "parentUUID": "767d83a1-304b-4a09-ba99-2726ff723d34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "870d2bfe-7eb1-4cba-a90b-092caf1da94a",
                "785a9d0a-e38a-49f2-9b3d-c3cb20ead7d9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9a828e66-7eb1-447d-9b5b-04ae8231b1c1",
              "title": "isLength.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-4.test.js",
              "file": "\\src\\test\\test-case-4.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return false when the provided value is not valid array like length",
                  "fullTitle": "Test case #4 isLength.js should return false when the provided value is not valid array like length",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isLength[\"default\"])('3')).to.equal(false);",
                  "err": {},
                  "uuid": "3c0b97e4-a923-46cd-9197-b94ca50889bc",
                  "parentUUID": "9a828e66-7eb1-447d-9b5b-04ae8231b1c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false when the provided value is not valid array like length",
                  "fullTitle": "Test case #4 isLength.js should return false when the provided value is not valid array like length",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isLength[\"default\"])(Number.MIN_VALUE)).to.equal(false);",
                  "err": {},
                  "uuid": "93e5dafd-1faa-4e60-9630-a3209d8af011",
                  "parentUUID": "9a828e66-7eb1-447d-9b5b-04ae8231b1c1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true when the provided value is valid array like length",
                  "fullTitle": "Test case #4 isLength.js should return true when the provided value is valid array like length",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isLength[\"default\"])(3)).to.equal(true);",
                  "err": {},
                  "uuid": "0a1745dc-3537-41e6-a15a-a0cd7881c044",
                  "parentUUID": "9a828e66-7eb1-447d-9b5b-04ae8231b1c1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3c0b97e4-a923-46cd-9197-b94ca50889bc",
                "93e5dafd-1faa-4e60-9630-a3209d8af011",
                "0a1745dc-3537-41e6-a15a-a0cd7881c044"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "895ea4ca-d4a0-4b3a-8831-c069caf74bdc",
              "title": "isArrayLike.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-4.test.js",
              "file": "\\src\\test\\test-case-4.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "shoudl return false for non-array-like value",
                  "fullTitle": "Test case #4 isArrayLike.js shoudl return false for non-array-like value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isArrayLike[\"default\"])(function () {})).to.equal(false);",
                  "err": {},
                  "uuid": "5ffc4d24-9cdc-4090-95c7-61375aef66ca",
                  "parentUUID": "895ea4ca-d4a0-4b3a-8831-c069caf74bdc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for array-like value",
                  "fullTitle": "Test case #4 isArrayLike.js should return true for array-like value",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isArrayLike[\"default\"])([1, 2, 3])).to.equal(true);",
                  "err": {},
                  "uuid": "342d6347-9f53-4e09-91e6-7ac5461aba22",
                  "parentUUID": "895ea4ca-d4a0-4b3a-8831-c069caf74bdc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5ffc4d24-9cdc-4090-95c7-61375aef66ca",
                "342d6347-9f53-4e09-91e6-7ac5461aba22"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "82faa686-3255-41f9-9249-163761350313",
              "title": "isTypedArray.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-4.test.js",
              "file": "\\src\\test\\test-case-4.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return false for non-typed empty array",
                  "fullTitle": "Test case #4 isTypedArray.js should return false for non-typed empty array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isTypedArray[\"default\"])([])).to.equal(false);",
                  "err": {},
                  "uuid": "4d281cff-c636-4e0c-97fd-5a3fc46dd697",
                  "parentUUID": "82faa686-3255-41f9-9249-163761350313",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-typed array",
                  "fullTitle": "Test case #4 isTypedArray.js should return false for non-typed array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isTypedArray[\"default\"])([1, 2, 3])).to.equal(false);",
                  "err": {},
                  "uuid": "39154c3d-a1b7-4d32-8a2e-94560e477ac2",
                  "parentUUID": "82faa686-3255-41f9-9249-163761350313",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for typed array",
                  "fullTitle": "Test case #4 isTypedArray.js should return true for typed array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isTypedArray[\"default\"])(new Uint8Array([1, 2, 3]))).to.equal(true);",
                  "err": {},
                  "uuid": "21036cba-c2a5-4ef5-9d9d-b89155094c85",
                  "parentUUID": "82faa686-3255-41f9-9249-163761350313",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4d281cff-c636-4e0c-97fd-5a3fc46dd697",
                "39154c3d-a1b7-4d32-8a2e-94560e477ac2",
                "21036cba-c2a5-4ef5-9d9d-b89155094c85"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "91fbb245-4ce0-48b6-93e9-443f171854a3",
              "title": "isEmpty.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-4.test.js",
              "file": "\\src\\test\\test-case-4.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return true for null",
                  "fullTitle": "Test case #4 isEmpty.js should return true for null",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isEmpty[\"default\"])(null)).to.equal(true);",
                  "err": {},
                  "uuid": "09aeebb0-d88a-4c4d-9b26-1d2430f8040e",
                  "parentUUID": "91fbb245-4ce0-48b6-93e9-443f171854a3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for true",
                  "fullTitle": "Test case #4 isEmpty.js should return true for true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isEmpty[\"default\"])(true)).to.equal(true);",
                  "err": {},
                  "uuid": "ba23a894-a487-4a43-8608-90032974decb",
                  "parentUUID": "91fbb245-4ce0-48b6-93e9-443f171854a3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return true for 1",
                  "fullTitle": "Test case #4 isEmpty.js should return true for 1",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isEmpty[\"default\"])(1)).to.equal(true);",
                  "err": {},
                  "uuid": "0bc65e22-8703-4e26-9f4e-18a0cb6d779e",
                  "parentUUID": "91fbb245-4ce0-48b6-93e9-443f171854a3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-empty value (string)",
                  "fullTitle": "Test case #4 isEmpty.js should return false for non-empty value (string)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isEmpty[\"default\"])('abc')).to.equal(false);",
                  "err": {},
                  "uuid": "c317fa94-844c-4aa2-ba61-ae416adeada8",
                  "parentUUID": "91fbb245-4ce0-48b6-93e9-443f171854a3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return false for non-empty value (object)",
                  "fullTitle": "Test case #4 isEmpty.js should return false for non-empty value (object)",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isEmpty[\"default\"])({\n  'a': 1\n})).to.equal(false);",
                  "err": {},
                  "uuid": "eda8f6f7-4c7c-471d-9c3d-cfb34c924153",
                  "parentUUID": "91fbb245-4ce0-48b6-93e9-443f171854a3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "09aeebb0-d88a-4c4d-9b26-1d2430f8040e",
                "ba23a894-a487-4a43-8608-90032974decb",
                "0bc65e22-8703-4e26-9f4e-18a0cb6d779e",
                "c317fa94-844c-4aa2-ba61-ae416adeada8",
                "eda8f6f7-4c7c-471d-9c3d-cfb34c924153"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b66f9564-519b-4be4-b05a-18e8edefb888",
          "title": "Test case #5",
          "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-5.test.js",
          "file": "\\src\\test\\test-case-5.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "edd5245f-522a-43a4-b986-af27d356e274",
              "title": "upperFirst.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-5.test.js",
              "file": "\\src\\test\\test-case-5.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should convert the first character of a string to upper case",
                  "fullTitle": "Test case #5 upperFirst.js should convert the first character of a string to upper case",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _upperFirst[\"default\"])(\"milk\")).to.equal(\"Milk\");",
                  "err": {},
                  "uuid": "c2623766-1057-4d5a-81c8-ca2ab825fc19",
                  "parentUUID": "edd5245f-522a-43a4-b986-af27d356e274",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should convert the first character of a sring to upper case, test case all upper cases",
                  "fullTitle": "Test case #5 upperFirst.js should convert the first character of a sring to upper case, test case all upper cases",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _upperFirst[\"default\"])(\"MILK\")).to.equal(\"MILK\");",
                  "err": {},
                  "uuid": "690a32b0-f518-485b-9ff3-396049b27ac0",
                  "parentUUID": "edd5245f-522a-43a4-b986-af27d356e274",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c2623766-1057-4d5a-81c8-ca2ab825fc19",
                "690a32b0-f518-485b-9ff3-396049b27ac0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "871ab2b9-8b81-4544-a85e-dbed371534df",
              "title": "isSymbol.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-5.test.js",
              "file": "\\src\\test\\test-case-5.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should return `true` when `value` is a symbol",
                  "fullTitle": "Test case #5 isSymbol.js should return `true` when `value` is a symbol",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isSymbol[\"default\"])(Symbol.iterator)).to.equal(true);",
                  "err": {},
                  "uuid": "691ab7f8-8f96-4e23-aa2d-7963f6f7a9db",
                  "parentUUID": "871ab2b9-8b81-4544-a85e-dbed371534df",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return `false` when `value` is not a symbol",
                  "fullTitle": "Test case #5 isSymbol.js should return `false` when `value` is not a symbol",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _isSymbol[\"default\"])(\"123\")).to.equal(false);",
                  "err": {},
                  "uuid": "ff6ab721-9548-4bc6-994a-e237f37ac28d",
                  "parentUUID": "871ab2b9-8b81-4544-a85e-dbed371534df",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "691ab7f8-8f96-4e23-aa2d-7963f6f7a9db",
                "ff6ab721-9548-4bc6-994a-e237f37ac28d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "9430b38c-16d6-4424-8fa4-3f98cb52d856",
              "title": "toString.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-5.test.js",
              "file": "\\src\\test\\test-case-5.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should convert the provided array to string",
                  "fullTitle": "Test case #5 toString.js should convert the provided array to string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _toString[\"default\"])([1, 2, 3])).to.equal(\"1,2,3\");",
                  "err": {},
                  "uuid": "ae12e504-8aaf-41d4-826e-2a6662390f0c",
                  "parentUUID": "9430b38c-16d6-4424-8fa4-3f98cb52d856",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should return '' for an empty string",
                  "fullTitle": "Test case #5 toString.js should return '' for an empty string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "//testing if travis passes with this\n//expect(toString(null)).to.equal(\"\")\nexpect((0, _toString[\"default\"])('')).to.equal(\"\");",
                  "err": {},
                  "uuid": "b97a8757-c412-4dca-ad6c-b9922abbd512",
                  "parentUUID": "9430b38c-16d6-4424-8fa4-3f98cb52d856",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should preserve the sign of `-0`",
                  "fullTitle": "Test case #5 toString.js should preserve the sign of `-0`",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _toString[\"default\"])(-0)).to.equal(\"-0\");",
                  "err": {},
                  "uuid": "a74b526d-b3bf-4774-92da-187284a7828b",
                  "parentUUID": "9430b38c-16d6-4424-8fa4-3f98cb52d856",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should preserve the string value when value is string",
                  "fullTitle": "Test case #5 toString.js should preserve the string value when value is string",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _toString[\"default\"])(\"milk\")).to.equal(\"milk\");",
                  "err": {},
                  "uuid": "44338caa-cc3d-4fdc-aab2-00be6ec088d5",
                  "parentUUID": "9430b38c-16d6-4424-8fa4-3f98cb52d856",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae12e504-8aaf-41d4-826e-2a6662390f0c",
                "b97a8757-c412-4dca-ad6c-b9922abbd512",
                "a74b526d-b3bf-4774-92da-187284a7828b",
                "44338caa-cc3d-4fdc-aab2-00be6ec088d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "19780588-17cd-421f-ba39-70684496d722",
              "title": "capitalize.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-5.test.js",
              "file": "\\src\\test\\test-case-5.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should converts the first character of `string` to upper case and the remaining is keeped with lower case",
                  "fullTitle": "Test case #5 capitalize.js should converts the first character of `string` to upper case and the remaining is keeped with lower case",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _capitalize[\"default\"])(\"milk\")).to.equal(\"Milk\");",
                  "err": {},
                  "uuid": "cede46db-d2da-4f7f-845f-20eaef1f5ed3",
                  "parentUUID": "19780588-17cd-421f-ba39-70684496d722",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should converts the first character of `string` to upper case and the remaining with lower case",
                  "fullTitle": "Test case #5 capitalize.js should converts the first character of `string` to upper case and the remaining with lower case",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _capitalize[\"default\"])(\"MILK\")).to.equal(\"Milk\");",
                  "err": {},
                  "uuid": "7f4204ee-1417-468a-aded-09614ecd7059",
                  "parentUUID": "19780588-17cd-421f-ba39-70684496d722",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cede46db-d2da-4f7f-845f-20eaef1f5ed3",
                "7f4204ee-1417-468a-aded-09614ecd7059"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9bbd80ca-8b69-4871-bb0d-a8ecf3b03805",
          "title": "Test case #6",
          "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-6.test.js",
          "file": "\\src\\test\\test-case-6.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "73855998-bbbb-42b1-a310-6cd673bb06e4",
              "title": "defaultTo.js",
              "fullFile": "D:\\masters\\period 1\\Software testing\\assignment_part_2\\COMP.SE.200-2020-assignment\\src\\test\\test-case-6.test.js",
              "file": "\\src\\test\\test-case-6.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should replace 'null' with default value (empty string) as a result",
                  "fullTitle": "Test case #6 defaultTo.js should replace 'null' with default value (empty string) as a result",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _defaultTo[\"default\"])(null, \"\")).to.equal(\"\");",
                  "err": {},
                  "uuid": "f74406e0-3443-4ef6-998b-84b437302faa",
                  "parentUUID": "73855998-bbbb-42b1-a310-6cd673bb06e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should replace 'undefined' with default value (empty string) as a result",
                  "fullTitle": "Test case #6 defaultTo.js should replace 'undefined' with default value (empty string) as a result",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _defaultTo[\"default\"])(undefined, \"\")).to.equal(\"\");",
                  "err": {},
                  "uuid": "416c6b75-78b6-43ba-940f-badf4791ed00",
                  "parentUUID": "73855998-bbbb-42b1-a310-6cd673bb06e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should replace 'undefined' with default value 'not available' as a result",
                  "fullTitle": "Test case #6 defaultTo.js should replace 'undefined' with default value 'not available' as a result",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _defaultTo[\"default\"])(null, \"not available\")).to.equal(\"not available\");",
                  "err": {},
                  "uuid": "6a3e8034-a9fe-4888-ba79-4a316acd9f8f",
                  "parentUUID": "73855998-bbbb-42b1-a310-6cd673bb06e4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not replace given value 'milk' with given default value 'water' as a result",
                  "fullTitle": "Test case #6 defaultTo.js should not replace given value 'milk' with given default value 'water' as a result",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect((0, _defaultTo[\"default\"])(\"milk\", \"water\")).to.equal(\"milk\");",
                  "err": {},
                  "uuid": "4da15695-9f78-4f79-82d4-67e89a18a58c",
                  "parentUUID": "73855998-bbbb-42b1-a310-6cd673bb06e4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f74406e0-3443-4ef6-998b-84b437302faa",
                "416c6b75-78b6-43ba-940f-badf4791ed00",
                "6a3e8034-a9fe-4888-ba79-4a316acd9f8f",
                "4da15695-9f78-4f79-82d4-67e89a18a58c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.2.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}